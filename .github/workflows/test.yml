name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: ðŸ§ª Build & Test Microservices
    runs-on: ubuntu-latest

    steps:
    # --- CHECKOUT SOURCE CODE ---
    - name: Checkout source code
      uses: actions/checkout@v4

    # --- SETUP DOCKER BUILDX + CACHE ---
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # --- BUILD IMAGES (FAST, CACHED, PARALLEL) ---
    - name: Build Docker images
      uses: docker/build-push-action@v6
      with:
        context: .
        push: false
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          NODE_ENV=production
        tags: |
          22728421-nguyenthanhan-eproject-auth:latest
          22728421-nguyenthanhan-eproject-product:latest
          22728421-nguyenthanhan-eproject-order:latest
          22728421-nguyenthanhan-eproject-api-gateway:latest
        # enable parallel build
        provenance: false

    # --- CREATE .ENV FILES ---
    - name: Create environment variable files
      run: |
        # AUTH SERVICE
        echo "MONGODB_AUTH_URI=mongodb://mongo:27017/auth" > auth/.env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> auth/.env
        echo "LOGIN_TEST_USER=${{ secrets.LOGIN_TEST_USER }}" >> auth/.env
        echo "LOGIN_TEST_PASSWORD=${{ secrets.LOGIN_TEST_PASSWORD }}" >> auth/.env

        # PRODUCT SERVICE
        echo "MONGODB_PRODUCT_URI=mongodb://mongo:27017/product" > product/.env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> product/.env
        echo "RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672" >> product/.env
        echo "LOGIN_TEST_USER=${{ secrets.LOGIN_TEST_USER }}" >> product/.env
        echo "LOGIN_TEST_PASSWORD=${{ secrets.LOGIN_TEST_PASSWORD }}" >> product/.env

        # ORDER SERVICE
        echo "MONGODB_ORDER_URI=mongodb://mongo:27017/order" > order/.env
        echo "RABBITMQ_URI=amqp://rabbitmq:5672" >> order/.env
        echo "RABBITMQ_QUEUE=orders" >> order/.env
        echo "PORT=3002" >> order/.env

    # --- START ONLY NEEDED CONTAINERS ---
    - name: Start required containers
      run: docker compose up -d mongo rabbitmq auth

    - name: Check service status
      run: docker compose ps

    # --- RUN TESTS ---
    - name: Run service tests
      run: |
        echo "Running auth service tests..."
        docker exec $(docker ps -qf "name=auth") \
          node --max-old-space-size=256 node_modules/.bin/mocha --timeout 20000 src/test/**/*.test.js --exit || exit 1

    # --- SAVE DOCKER IMAGES AS ARTIFACTS (FOR DEPLOY JOB) ---
    - name: Save Docker images as artifact
      run: docker save \
        -o images.tar \
        22728421-nguyenthanhan-eproject-auth \
        22728421-nguyenthanhan-eproject-product \
        22728421-nguyenthanhan-eproject-order \
        22728421-nguyenthanhan-eproject-api-gateway
    - uses: actions/upload-artifact@v4
      with:
        name: docker-images
        path: images.tar

    # --- CLEANUP ---
    - name: Stop and remove containers
      if: always()
      run: docker compose down -v

  deploy:
    name: ðŸš€ Deploy to Docker Hub
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    # --- CHECKOUT SOURCE CODE ---
    - name: Checkout source code
      uses: actions/checkout@v4

    # --- DOWNLOAD BUILT IMAGES ---
    - uses: actions/download-artifact@v4
      with:
        name: docker-images
        path: .

    - name: Load Docker images
      run: docker load -i images.tar

    # --- LOGIN TO DOCKER HUB ---
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    # --- PUSH IMAGES TO DOCKER HUB ---
    - name: Push images to Docker Hub
      run: |
        docker tag 22728421-nguyenthanhan-eproject-auth:latest ${{ secrets.DOCKER_USERNAME }}/22728421_nguyenthanhan_eproject:auth-latest
        docker push ${{ secrets.DOCKER_USERNAME }}/22728421_nguyenthanhan_eproject:auth-latest

        docker tag 22728421-nguyenthanhan-eproject-product:latest ${{ secrets.DOCKER_USERNAME }}/22728421_nguyenthanhan_eproject:product-latest
        docker push ${{ secrets.DOCKER_USERNAME }}/22728421_nguyenthanhan_eproject:product-latest

        docker tag 22728421-nguyenthanhan-eproject-order:latest ${{ secrets.DOCKER_USERNAME }}/22728421_nguyenthanhan_eproject:order-latest
        docker push ${{ secrets.DOCKER_USERNAME }}/22728421_nguyenthanhan_eproject:order-latest

        docker tag 22728421-nguyenthanhan-eproject-api-gateway:latest ${{ secrets.DOCKER_USERNAME }}/22728421_nguyenthanhan_eproject:api-gateway-latest
        docker push ${{ secrets.DOCKER_USERNAME }}/22728421_nguyenthanhan_eproject:api-gateway-latest
